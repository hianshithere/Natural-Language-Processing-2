/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TripleGUI2;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.StringTokenizer;

/**
 *
 * @author anshit
 */
public class TriplesExtractions extends javax.swing.JFrame {
    String fullpath;

    /**
     * Creates new form TriplesExtractions
     */
    public TriplesExtractions() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BrowseButtonFileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        annBrowsing = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        annDirectory = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        sopDisplay = new javax.swing.JTextArea();
        save = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        browseannlabel = new javax.swing.JLabel();
        extractedTripleslbl = new javax.swing.JLabel();
        TriplesExecuteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Triples Generation");

        annBrowsing.setFont(new java.awt.Font("Calisto MT", 0, 12)); // NOI18N
        annBrowsing.setText("Browse");
        annBrowsing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annBrowsingActionPerformed(evt);
            }
        });

        annDirectory.setEditable(false);
        annDirectory.setToolTipText("Your .ann file location");
        jScrollPane1.setViewportView(annDirectory);

        sopDisplay.setColumns(20);
        sopDisplay.setRows(5);
        jScrollPane2.setViewportView(sopDisplay);

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        browseannlabel.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        browseannlabel.setText("Browse for your .ann file");
        browseannlabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        extractedTripleslbl.setFont(new java.awt.Font("Calisto MT", 0, 12)); // NOI18N
        extractedTripleslbl.setText("Your Extracted Triples");
        extractedTripleslbl.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        TriplesExecuteButton.setText("Execute");
        TriplesExecuteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TriplesExecuteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(browseannlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(annBrowsing)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(extractedTripleslbl, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TriplesExecuteButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exit)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(browseannlabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(annBrowsing))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(extractedTripleslbl))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TriplesExecuteButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(exit)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void annBrowsingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annBrowsingActionPerformed
        // TODO add your handling code here:
        annDirectory.setText(getPath());
    }//GEN-LAST:event_annBrowsingActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        dispose();
        
    }//GEN-LAST:event_exitActionPerformed

    private void TriplesExecuteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TriplesExecuteButtonActionPerformed
        // TODO add your handling code here:
        try{
            FileExecute();
        }
        catch(Exception err){}
    }//GEN-LAST:event_TriplesExecuteButtonActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        try{
            FileWrite();
        }
        catch(Exception err){}
    }//GEN-LAST:event_saveActionPerformed

    /**
     * @param args the command line arguments
     */
                       

    public String getPath(){
        int i=BrowseButtonFileChooser.showDialog(null, "Select");
        BrowseButtonFileChooser.setCurrentDirectory(new java.io.File(""));
        BrowseButtonFileChooser.setAcceptAllFileFilterUsed(false);
        BrowseButtonFileChooser.getCurrentDirectory();
        // int an=657583,dp=6877,ar=6568,at=6582,ka=7571;
        String Path = BrowseButtonFileChooser.getCurrentDirectory().toString();
        String filename = BrowseButtonFileChooser.getSelectedFile().getName();
        fullpath= pathGen(Path+filename);
        return Path+"\\"+filename;
    }
    public String pathGen(String file){
         
        String nstr = "";
        //int an=657583,dp=6877,ar=6568,at=6582,ka=7571;
        int len = file.length();
        String cha = null;
        for (int i = 0; i < len; i++) {
            char ch = file.charAt(i);
            if (ch == '\\') {
                cha = "\\\\";
                nstr = nstr + cha;
            } else {
                nstr = nstr + ch;
            }

            }
        return nstr;
    
    }
    
    //===============================Triples Extraction main Coding=======================================
    
        static StringTokenizer t;
	static ArrayList<String> myList = new ArrayList<String>();
	static List<String> Display = new ArrayList<String>();
        static List<String> Display2 = new ArrayList<String>();
	static List<String> Triples=new ArrayList<String>();
        String displayonWindow="";
        Iterator<String> disp;
		public void FileExecute() throws IOException {
			/*
			 * 		Main method to manage the tokenization of .ann file and extracting 
			 * 		the triples(Subject,Predicate,Object) from it. 
			 */
		BufferedReader br = null;
		FileReader fr = null;
		fr= new FileReader(fullpath);
		br= new BufferedReader(fr);
                //================== 
		
		String sCurrentLine="";
		String allLines= "";
			while((sCurrentLine=br.readLine())!= null){
			allLines+=sCurrentLine+"\n";
		}
		
		t = new StringTokenizer(allLines);
		String word=" ";
		while(t.hasMoreTokens())
		{
		    word=t.nextToken();
		    myList.add(word);
		}
		//Converting tokens to elements of list
		Iterator<String> iterate=myList.iterator();
		int i=0;

		while(iterate.hasNext()){
			
			String wording=iterate.next().toString();
			/*Checking for relation and finding R(Relation) in the form of ann and extracting the sentence related to
			 * R which is the relation annotation shortcut in brat tool.
			 */
			if(wording.length()==2 && wording.charAt(i)=='R' && (int)wording.charAt(i+1)>(int)0)
			{
				Display=RelationExtraction(myList.indexOf(wording));
//                                Display2=RelationExtraction(myList.indexOf(wording));
			}
		}
                 displayonWindow="Subject\tPredicate\tObject\n";
                       displayonWindow+="=======\t=========\t========\n";
                String sub , pre, obj ;
                disp=Display.iterator();
		while(disp.hasNext()){
                        
			sub=disp.next();
                        pre=disp.next();
                        obj=disp.next();
			displayonWindow+=(sub+"\t"+pre+"\t"+obj+"\n");
		}
                sopDisplay.setText(displayonWindow);
                br.close();
		fr.close();
                }
                
                public void FileWrite()throws IOException{
                //=======================================================================================
                String savePath=getPath();
                savePath=pathGen(savePath);
                
                PrintWriter out = new PrintWriter ( new BufferedWriter ( new FileWriter ( savePath, false )  )  ) ;
                out.format("%15s%15s%15s","Subject","Predicate","Object");
		out.println();
//                out.println(sopDisplay.getText());
		Iterator<String> disp=Display.iterator();
                while(disp.hasNext()){
			out.format("%15s%15s%15s",disp.next(),disp.next(),disp.next());
			out.println();
		}
		
		out.close();
		System.out.println("Successfully Completed");
	}
	
	public static List<String> RelationExtraction(int index)throws IOException{
		//This method extracts the triples from the ann file.
		String Predicate=myList.subList(index+1, index+2).toString();
		Predicate=Predicate.substring(1,Predicate.length()-1);
		String Subject=myList.subList(index+2, index+3).toString();
		String Object=myList.subList(index+3, index+4).toString();
		Subject=SubjectExtraction(Subject.toString());
		Object=ObjectExtraction(Object.toString());
		Triples.add(Subject);
		Triples.add(Predicate);
		Triples.add(Object);
		return Triples;
	}
	
	public static String SubjectExtraction(String subject){
		//This method finds the final subject value in the ann file.
		subject = subject.substring(subject.indexOf(':')+1,subject.length()-1);
		Iterator<String> sub=myList.iterator();
		String subValue="";
		while (sub.hasNext()){
			if(sub.next().toString().equalsIgnoreCase(subject)){
				subValue=sub.next();
				subValue=sub.next();
				subValue=sub.next();
				subValue=sub.next();
				}
			}
		return subValue;
	}
	
	public static String ObjectExtraction(String object){
		//This method finds the final object value in the ann file.
		object = object.substring(object.indexOf(':')+1,object.length()-1);
		Iterator<String> obj=myList.iterator();
		String objValue="";
		while (obj.hasNext()){
			if(obj.next().toString().equalsIgnoreCase(object)){
				objValue=obj.next();
				objValue=obj.next();
				objValue=obj.next();
				objValue=obj.next();
			}
	}
		return objValue;
	}
    //=======================================end of triples extraction main code==========================
   
      
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TriplesExtractions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TriplesExtractions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TriplesExtractions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TriplesExtractions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TriplesExtractions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser BrowseButtonFileChooser;
    private javax.swing.JButton TriplesExecuteButton;
    private javax.swing.JButton annBrowsing;
    private javax.swing.JTextPane annDirectory;
    private javax.swing.JLabel browseannlabel;
    private javax.swing.JButton exit;
    private javax.swing.JLabel extractedTripleslbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton save;
    private javax.swing.JTextArea sopDisplay;
    // End of variables declaration//GEN-END:variables
}
