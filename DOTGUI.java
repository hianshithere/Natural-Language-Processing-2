/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DOTGUI;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author anshit
 */
public class DOTGUI extends javax.swing.JFrame {

    /**
     * Creates new form DOTGUI
     */
    public DOTGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DOTFC = new javax.swing.JFileChooser();
        graphicalRepresentationlbl = new javax.swing.JLabel();
        DOTBrowse = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        DOTPath = new javax.swing.JTextPane();
        CreateDotFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Graph Generation");

        graphicalRepresentationlbl.setBackground(new java.awt.Color(255, 153, 153));
        graphicalRepresentationlbl.setFont(new java.awt.Font("Calisto MT", 0, 18)); // NOI18N
        graphicalRepresentationlbl.setText("Graphical Representation of Triples");
        graphicalRepresentationlbl.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        DOTBrowse.setFont(new java.awt.Font("Calisto MT", 0, 12)); // NOI18N
        DOTBrowse.setText("Browse");
        DOTBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DOTBrowseActionPerformed(evt);
            }
        });

        DOTPath.setEditable(false);
        DOTPath.setToolTipText("Your .ann file location");
        jScrollPane3.setViewportView(DOTPath);

        CreateDotFile.setText("Create");
        CreateDotFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateDotFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graphicalRepresentationlbl, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DOTBrowse)
                        .addGap(0, 306, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(CreateDotFile)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(graphicalRepresentationlbl)
                .addGap(18, 18, 18)
                .addComponent(DOTBrowse)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CreateDotFile)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DOTBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DOTBrowseActionPerformed
        // TODO add your handling code here:
        DOTPath.setText(getPath());
        try {
            // TODO add your handling code here:
            ReadFile();
        } catch (IOException ex) {
            Logger.getLogger(DOTGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DOTBrowseActionPerformed

    private void CreateDotFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateDotFileActionPerformed
        try {
            // TODO add your handling code here:
            WriteFile();
        } catch (IOException ex) {
            Logger.getLogger(DOTGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CreateDotFileActionPerformed
                                    
    /**
     * @param args the command line arguments
     */
    String fullpath;
    public String getPath(){
        int i=DOTFC.showDialog(null, "Select");
        DOTFC.setCurrentDirectory(new java.io.File(""));
        DOTFC.setAcceptAllFileFilterUsed(false);
        DOTFC.getCurrentDirectory();
        // int an=657583,dp=6877,ar=6568,at=6582,ka=7571;
        String Path = DOTFC.getCurrentDirectory().toString();
        String filename = DOTFC.getSelectedFile().getName();
        fullpath= pathGen(Path+"/"+filename);
        
//        System.out.println(Path+""
//                + "\n"
//                + filename+"\n"+fullpath);
     
        return Path+"/"+filename;
    }
    public String pathGen(String file){
         
        String nstr = "";
        //int an=657583,dp=6877,ar=6568,at=6582,ka=7571;
        int len = file.length();
        String cha = null;
        for (int i = 0; i < len; i++) {
            char ch = file.charAt(i);
            if (ch == '/') {
                cha = "//";
                nstr = nstr + cha;
            } else {
                nstr = nstr + ch;
            }

            }
        return nstr;
    
    }
    String subject[]=new String[50];
    String predicate[]=new String[50];
    String object[]=new String[50];
    StringTokenizer tokenizer;
    int count=0,i;
    public void ReadFile()throws IOException{
                BufferedReader br=new BufferedReader(new FileReader(fullpath));
                
		
		String line=br.readLine();
		while((line=br.readLine())!=null){
			tokenizer=new StringTokenizer(line);
			subject[count]=tokenizer.nextToken();
			predicate[count]=tokenizer.nextToken();
			object[count++]=tokenizer.nextToken();
		}
		br.close();
		
	}
    public void WriteFile()throws IOException{
        String path=getPath();
        path=pathGen(path);
        PrintWriter out = new PrintWriter ( new BufferedWriter ( new FileWriter ( path, false )  )  ) ;
        out.println("digraph {");
		for(i=0;i<count;i++)
		{
			out.println(subject[i]+"->"+object[i]+"[label=\""+predicate[i]+"\",weight=\""+predicate[i]+"\"];");
		}
		out.println("}");
                out.close();
                JOptionPane.showMessageDialog(null, "File created successfully!");
                dispose();
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DOTGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DOTGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DOTGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DOTGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DOTGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateDotFile;
    private javax.swing.JButton DOTBrowse;
    private javax.swing.JFileChooser DOTFC;
    private javax.swing.JTextPane DOTPath;
    private javax.swing.JLabel graphicalRepresentationlbl;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
